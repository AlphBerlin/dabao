// Add the following to the prisma schema after running the SQL migration

/*
// Domain Type enum for distinguishing between domain types
enum DomainType {
  PRIMARY
  SUBDOMAIN
  CUSTOM_DOMAIN
  ALIAS

  @@schema("dabao_tenant")
}

// Client Status enum for tracking client access status
enum ClientStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING
  EXPIRED

  @@schema("dabao_tenant")
}

// ProjectDomain model for managing domains and subdomains
model ProjectDomain {
  id                String     @id @default(cuid())
  projectId         String     @map("project_id")
  domain            String     @unique
  type              DomainType @default(SUBDOMAIN)
  isPrimary         Boolean    @default(false) @map("is_primary")
  isVerified        Boolean    @default(false) @map("is_verified")
  verificationToken String?    @map("verification_token")
  verifiedAt        DateTime?  @map("verified_at")
  dnsSettings       Json?      @map("dns_settings") // DNS settings like CNAME, A records
  sslEnabled        Boolean    @default(false) @map("ssl_enabled") 
  sslCertificate    String?    @map("ssl_certificate")
  sslExpiresAt      DateTime?  @map("ssl_expires_at")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")

  // Relations
  project  Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  clients  ProjectClient[]

  @@unique([projectId, domain])
  @@map("project_domains")
  @@schema("dabao_tenant")
}

// ProjectClient model for managing client access
model ProjectClient {
  id          String       @id @default(cuid())
  projectId   String       @map("project_id")
  domainId    String       @map("domain_id")
  name        String
  description String?
  clientId    String       @unique @map("client_id")  // Client identifier
  clientSecret String      @map("client_secret")      // Client secret for API auth
  apiKey      String       @unique                    // API key for authentication
  status      ClientStatus @default(ACTIVE)
  accessScope Json         @map("access_scope")       // JSON specifying what this client can access
  allowedIPs  String[]     @map("allowed_ips")        // List of allowed IP addresses
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  expiresAt   DateTime?    @map("expires_at")
  lastUsedAt  DateTime?    @map("last_used_at")

  // Relations
  project Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  domain  ProjectDomain @relation(fields: [domainId], references: [id], onDelete: Cascade)
  
  @@unique([projectId, clientId])
  @@map("project_clients")
  @@schema("dabao_tenant")
}

// Then update the Project model to include these relations:
// In the Project model add:
// domains  ProjectDomain[]
// clients  ProjectClient[]
*/
