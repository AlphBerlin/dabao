name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  REGION: asia-southeast1 # Change to your preferred GCP region
  
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up service matrix
        id: set-matrix
        run: |
          echo "matrix={\"service\":[\"client\", \"da-assistant\", \"dabao-mcp-server\", \"web\", \"www\", \"kong\"]}" >> $GITHUB_OUTPUT

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        token_format: access_token

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud credentials
      run: gcloud auth configure-docker

    - name: Set service-specific variables
      id: vars
      run: |
        if [[ "${{ matrix.service }}" == "kong" ]]; then
          echo "dockerfile=docker/kong/Dockerfile" >> $GITHUB_OUTPUT
          echo "context=docker/kong" >> $GITHUB_OUTPUT
          echo "min_instances=1" >> $GITHUB_OUTPUT
        else
          echo "dockerfile=apps/${{ matrix.service }}/Dockerfile" >> $GITHUB_OUTPUT
          echo "context=apps/${{ matrix.service }}" >> $GITHUB_OUTPUT
          echo "min_instances=0" >> $GITHUB_OUTPUT
        fi
        echo "image_name=gcr.io/${{ env.PROJECT_ID }}/dabao-${{ matrix.service }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    # Build service specific Dockerfile
    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ steps.vars.outputs.context }}
        file: ${{ steps.vars.outputs.dockerfile }}
        push: true
        tags: ${{ steps.vars.outputs.image_name }}
        cache-from: type=gha,scope=${{ matrix.service }}
        cache-to: type=gha,scope=${{ matrix.service }},mode=max

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: dabao-${{ matrix.service }}
        region: ${{ env.REGION }}
        image: ${{ steps.vars.outputs.image_name }}
        flags: |
          --min-instances=${{ steps.vars.outputs.min_instances }}
          --max-instances=10
          --port=8080
          --allow-unauthenticated
          --set-env-vars=ENVIRONMENT=production
    
    - name: Service URL
      run: echo "Service ${{ matrix.service }} deployed to ${{ steps.deploy.outputs.url }}"

    - name: Update Kong API Gateway Configuration
      if: matrix.service == 'kong'
      run: |
        # Update Kong configuration to route to the Cloud Run services
        # Additional configuration steps for Kong would go here
        echo "Kong API Gateway configured"