name: Lint and Test

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.15.5
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check for lockfile inconsistencies
        id: lockfile-check
        continue-on-error: true
        run: |
          pnpm install --frozen-lockfile
          if [ $? -ne 0 ]; then
            echo "Lockfile is outdated, will update in the next step"
            echo "outdated=true" >> $GITHUB_OUTPUT
          else
            echo "outdated=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: |
          if [ "${{ steps.lockfile-check.outputs.outdated }}" == "true" ]; then
            echo "Installing with lockfile update"
            pnpm install --no-frozen-lockfile
          else
            echo "Using frozen lockfile"
            pnpm install --frozen-lockfile
          fi

      - name: Lint
        run: pnpm lint

      - name: Type Check
        run: pnpm turbo check-types

      - name: Run tests
        run: pnpm test
